* {
	margin: 0;
	padding: 0;
	box-sizing: border-box; /*El valor border-box en el box-sizing hace que el padding y el border pasen a formar parte del c√°lculo del ancho de la caja y no lo suman posteriormente.*/
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
}

body {
	background: #f2f2f2;
	font-family: Arial, sans-serif;
}

.contenedor {            /*Padre*/
	width: 80%;
	max-width: 700px;
	height: 500px;/*lo usamos para mostrar el aling-items */
	background: #212d48;

	display: flex;/*hace que el contendo del padre se hagan flexibles, aca los elementos hijos se ponen uno al lado del otro.(como si le hubieramos puesto la propieda de float: left)*/
	flex-direction: row; /*row es el predeterminado y pone un elemento hijo uno al lado del otro 1,2,3,4*/
	/*flex-direction: row-reverse;a diferencia del anterior pone los hijos a la inversa 4,3,2,1*/
	/*flex-direction: column;nos pone en columna los hijos 1,2,3,4 hacia abajo*/
	/*flex-direction: column-reverse; nos pone los elementos en columna pero a la inversa 4,3,2,1 hacia abajo*/


	/*#####  poner 6cajas para ver mejor*/
	flex-wrap: wrap;/*en caso que los hijos sean 6 hace que en lugar de seguir poniendolos uno al lado
	del otro,(como son flexibles no miden ya 100px sino menos para hacer lugar a las demas cajas) con esta propiedad
	se respetan los 100px y entonces la caja que no entra se ponga en la linea de abajo respetando los espaciados.*/

	/*flex-wrap: wrap-reverse; como el anteror pero te cambia el orden 6,5,4,3,2,1*/

	/*flex-wrap: nowrap; cada elemnto hijo tendra un ancho dinamico, no respeta el ancho definido para cada caja. sino que se pone automaticamnte*/


	/*combina*/
	/*flex-flow: row wrap; es la combinacion de los 2 anteriores */


	/*#####   poner 3 cajas para ver mejor*/
	/*justify-content: flex-start; por defecto justifica el inicio de los elemt hijos*/
	/*justify-content: flex-end; mueve los elem. a la derecha*/
	/*justify-content: center; centra los elemt hijos*/
	justify-content: space-between; /*divide el espacio sobrante entre los elementos .este calculo es automatico*/
	/*justify-content: space-around;espacio al inicio y al final*/



	/*###### poner un height al contenedor padre como esta arriba para que se vea*/
	/*align-items: flex-start;nos permite acomodar los elemntos hijos verticalmente. asi esta predeterminado*/
	/*align-items: flex-end;nos mueve el contenido abajo*/

	/*align-items: center;centra el contenido entre top y bottom*/

	/*align-items: stretch; para que los items se estiren tenemos que quitarle a la caja el alto .(quitar el alto a los elem hijos)respeta el padding*/


	/*###### align content nos permite los mismo que align items, pero este es usa cuando hay mas de una linea de elementos! */
	/*probar con 6 cajas*/
	/*align-content: flex-start;*/
	/*align-content: flex-end;*/
	align-content: center;
	/*align-content: space-between;*/
	/*align-content: space-around ;*/


}	

.caja {
	width: 100px;
	height: 100px;
	background: #f79256;
	text-align: center;/*centramos los numeros*/
	margin: 20px;/*margen de separacion entre cajas*/
	padding: 20px;
	font-size: 40px;
	color: #fff;
}

